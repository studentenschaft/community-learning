# Generated by Django 3.0.4 on 2021-03-29 09:28

from django.conf import settings
import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("documents", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("time", models.DateTimeField(default=django.utils.timezone.now)),
                ("edittime", models.DateTimeField(default=django.utils.timezone.now)),
                ("search_vector", django.contrib.postgres.search.SearchVectorField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents_comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "document",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="documents.Document",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="comment",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="documents_c_search__02d77d_gin"
            ),
        ),
        migrations.RunSQL(
            sql="""
                CREATE TRIGGER document_comment_update_trigger
                BEFORE INSERT OR UPDATE OF text
                ON documents_comment
                FOR EACH ROW EXECUTE PROCEDURE
                tsvector_update_trigger(search_vector, 'pg_catalog.english', text);
            """,
            reverse_sql="""
                DROP TRIGGER IF EXISTS document_comment_update_trigger
                ON documents_comment;
            """,
        ),
    ]
