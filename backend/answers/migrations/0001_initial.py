# Generated by Django 3.0.2 on 2020-01-19 16:58

import answers.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('edittime', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_legacy_answer', models.BooleanField(default=False)),
                ('long_id', models.CharField(default=answers.models.generate_long_id, max_length=256, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('displayname', models.CharField(max_length=256)),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=256, unique=True)),
                ('displayname', models.CharField(max_length=256)),
                ('remark', models.TextField()),
                ('resolve_alias', models.CharField(max_length=256)),
                ('public', models.BooleanField(default=False)),
                ('finished_cuts', models.BooleanField(default=False)),
                ('finished_wiki_transfer', models.BooleanField(default=False)),
                ('needs_payment', models.BooleanField(default=False)),
                ('import_claim_time', models.DateTimeField(null=True)),
                ('is_printonly', models.BooleanField(default=False)),
                ('has_solution', models.BooleanField(default=False)),
                ('solution_printonly', models.BooleanField(default=False)),
                ('master_solution', models.CharField(max_length=512)),
                ('legacy_solution', models.CharField(max_length=512)),
                ('is_oral_transcript', models.BooleanField(default=False)),
                ('oral_transcript_checked', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='categories.Category')),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='answers.ExamType')),
                ('import_claim', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='import_claim_set', to=settings.AUTH_USER_MODEL)),
                ('oral_transcript_uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='oral_transcript_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('edittime', models.DateTimeField(default=django.utils.timezone.now)),
                ('long_id', models.CharField(default=answers.models.generate_long_id, max_length=256, unique=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='answers.Answer')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_num', models.IntegerField()),
                ('rel_height', models.FloatField()),
                ('cut_version', models.IntegerField(default=1)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='answers.Exam')),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='answer_section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='answers.AnswerSection'),
        ),
        migrations.AddField(
            model_name='answer',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='downvotes',
            field=models.ManyToManyField(related_name='downvoted_answer_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='expertvotes',
            field=models.ManyToManyField(related_name='expertvote_answer_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='flagged',
            field=models.ManyToManyField(related_name='flagged_answer_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='upvotes',
            field=models.ManyToManyField(related_name='upvoted_answer_set', to=settings.AUTH_USER_MODEL),
        ),
    ]
